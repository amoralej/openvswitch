From 382015c3ce0d6c3e39ec7022f7752752fa64807d Mon Sep 17 00:00:00 2001
From: Ben Pfaff <blp@ovn.org>
Date: Tue, 20 Dec 2016 16:17:31 -0800
Subject: [PATCH] ovsdb-idlc: Initialize nonnull string columns for inserted
 rows.

When a schema column has type "exactly one string", the corresponding
struct member has type "char *" and the documented and expected behavior
is that the string should always be nonnull.  (The code generator even
adds a comment /* Always nonnull. */ in the struct definition.)  In the
case where a value is not available, the string is supposed to be
initialized to "" instead of to NULL.

However, the IDL code for inserting a new row did not properly initialize
the column to "", instead leaving it NULL.  This could cause null pointer
dereferences in corner cases.

This commit fixes the problem.

Reported-by: Lance Richardson <lrichard@redhat.com>
Reported-at: https://mail.openvswitch.org/pipermail/ovs-dev/2016-December/326500.html
Signed-off-by: Ben Pfaff <blp@ovn.org>
Tested-by: Lance Richardson <lrichard@redhat.com>
---
 ovsdb/ovsdb-idlc.in | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/ovsdb/ovsdb-idlc.in b/ovsdb/ovsdb-idlc.in
index cd4532e..7261c95 100755
--- a/ovsdb/ovsdb-idlc.in
+++ b/ovsdb/ovsdb-idlc.in
@@ -493,6 +493,11 @@ void
         for columnName, column in sorted(table.columns.iteritems()):
             if column.type.is_smap():
                 print "    smap_init(&row->%s);" % columnName
+            elif (column.type.n_min == 1 and
+                  column.type.n_max == 1 and
+                  column.type.key.type == ovs.db.types.StringType and
+                  not column.type.value):
+                print "    row->%s = \"\";" % columnName
         print "}"
 
         # First, next functions.
-- 
1.8.3.1

